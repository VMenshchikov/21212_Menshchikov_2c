/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples
 * This project uses @Incubating APIs which are subject to change.
*/

plugins {
    id 'java'
    id 'application'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

application {
    mainClass = 'Main'
}



/* tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
} */

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

sourceSets {
    main {
        //output.dir('build/classes')
        java.srcDirs = ['code']
        java.exclude 'MyTest.java'
        resources.srcDirs = ['code/resources']
        resources.exclude 'code/resources/testFiles'

    }
    test {
        //mainClassName = 'MyTest'
        output.dir('build/classes')
        java.srcDirs = ['code']
        //java.include 'code/MyTest.java'
        resources.srcDirs = ['code/resources']
        resources.exclude "code/resources/programs"
    }
}

/* jar {
    archiveName = 'lab1.jar'
    manifest {
        attributes(
                'Main-Class': 'Main'
        )
    }
}   */

/* task Test(type: Test) {
    main = 'Test'
} */

task HelloWorld(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['21', '4', './build/resources/main/programs/HelloWorld.txt',
             './build/resources/main/config.properties']
}

task HelloWorld2(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['30', '2', './build/resources/main/programs/HelloWorld2.txt',
             './build/resources/main/config.properties']
}

task Fib(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['100', '5', './build/resources/main/programs/Fib.txt',
             './build/resources/main/config.properties']
}

task Fact(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['80', '5', './build/resources/main/programs/Fact.txt',
             './build/resources/main/config.properties']
}

task Bottles(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['500', '100', './build/resources/main/programs/99bottles.txt',
             './build/resources/main/config.properties']
}

task Erat(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['1000', '5', './build/resources/main/programs/Erat.txt',
             './build/resources/main/config.properties']
}

task InputInt(type: JavaExec) {
    mainClass = 'Main'
    classpath = sourceSets.main.runtimeClasspath
    args = ['10', '1', './build/resources/main/programs/input.txt',
             './build/resources/main/config.properties']
}

 task clear(type : Delete) {
    delete 'build'
    delete 'bin/'
}
